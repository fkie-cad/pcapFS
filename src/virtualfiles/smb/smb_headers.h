#ifndef PCAPFS_SMB_HEADERS_H
#define PCAPFS_SMB_HEADERS_H

#include <string>
#include <vector>

namespace pcapfs {
    namespace smb {
        enum SmbVersion : uint16_t {
            SMB_VERSION_2_0_2 = 0x0202,
            SMB_VERSION_2_1 = 0x0210,
            SMB_VERSION_3_0 = 0x0300,
            SMB_VERSION_3_0_2 = 0x0302,
            SMB_VERSION_3_1_1 = 0x0311
        };

        enum SmbCommand : uint16_t {
            SMB2_NEGOTIATE = 0x0000,
            SMB2_SESSION_SETUP = 0x0001,
            SMB2_LOGOFF = 0x0002,
            SMB2_TREE_CONNECT = 0x0003,
            SMB2_TREE_DISCONNECT = 0x0004,
            SMB2_CREATE = 0x0005,
            SMB2_CLOSE = 0x0006,
            SMB2_FLUSH = 0x0007,
            SMB2_READ = 0x0008,
            SMB2_WRITE = 0x0009,
            SMB2_LOCK = 0x000A,
            SMB2_IOCTL = 0x000B,
            SMB2_CANCEL = 0x000C,
            SMB2_ECHO = 0x000D,
            SMB2_QUERY_DIRECTORY = 0x000E,
            SMB2_CHANGE_NOTIFY = 0x000F,
            SMB2_QUERY_INFO = 0x0010,
            SMB2_SET_INFO = 0x0011,
            SMB2_OPLOCK_BREAK = 0x0012
        };

        const std::vector<std::string> smbCommandStrings = {
            "SMB2 NEGOTIATE",
            "SMB2 SESSION_SETUP",
            "SMB2 LOGOFF",
            "SMB2 TREE_CONNECT",
            "SMB2 TREE_DISCONNECT",
            "SMB2 CREATE",
            "SMB2 CLOSE",
            "SMB2 FLUSH",
            "SMB2 READ",
            "SMB2 WRITE",
            "SMB2 LOCK",
            "SMB2 IOCTL",
            "SMB2 CANCEL",
            "SMB2 ECHO",
            "SMB2 QUERY_DIRECTORY",
            "SMB2 CHANGE_NOTIFY",
            "SMB2 QUERY_INFO",
            "SMB2 SET_INFO",
            "SMB2 OPLOCK_BREAK"
        };

        enum SmbFlags : uint32_t {
            SMB2_FLAGS_SERVER_TO_REDIR = 0x00000001,
            SMB2_FLAGS_ASYNC_COMMAND = 0x00000002,
            SMB2_FLAGS_RELATED_OPERATIONS = 0x00000004,
            SMB2_FLAGS_SIGNED = 0x00000008,
            SMB2_FLAGS_PRIORITY_MASK = 0x00000070,
            SMB2_FLAGS_DFS_OPERATIONS = 0x10000000
        };

        enum StatusCodes : uint32_t {
            STATUS_SUCCESS = 0x00000000,
            STATUS_NOT_IMPLEMENTED = 0xC0000002,
            STATUS_INVALID_DEVICE_REQUEST = 0xC0000010,
            STATUS_ILLEGAL_FUNCTION = 0xC00000AF,
            STATUS_NO_SUCH_FILE = 0xC000000F,
            STATUS_NO_SUCH_DEVICE = 0xC000000E,
            STATUS_OBJECT_NAME_NOT_FOUND = 0xC0000034,
            STATUS_OBJECT_PATH_INVALID = 0xC0000039,
            STATUS_OBJECT_PATH_NOT_FOUND = 0xC000003A,
            STATUS_OBJECT_PATH_SYNTAX_BAD = 0xC000003B,
            STATUS_DFS_EXIT_PATH_FOUND = 0xC000009B,
            STATUS_REDIRECTOR_NOT_STARTED = 0xC00000FB,
            STATUS_TOO_MANY_OPENED_FILES = 0xC000011F,
            STATUS_ACCESS_DENIED1 = 0xC0000022,
            STATUS_INVALID_LOCK_SEQUENCE = 0xC000001E,
            STATUS_INVALID_VIEW_SIZE = 0xC000001F,
            STATUS_ALREADY_COMMITTED = 0xC0000021,
            STATUS_PORT_CONNECTION_REFUSED = 0xC0000041,
            STATUS_THREAD_IS_TERMINATING = 0xC000004B,
            STATUS_DELETE_PENDING = 0xC0000056,
            STATUS_PRIVILEGE_NOT_HELD = 0xC0000061,
            STATUS_LOGON_FAILURE = 0xC000006D,
            STATUS_FILE_IS_A_DIRECTORY = 0xC00000BA,
            STATUS_FILE_RENAMED = 0xC00000D5,
            STATUS_PROCESS_IS_TERMINATING = 0xC000010A,
            STATUS_CANNOT_DELETE = 0xC0000121,
            STATUS_FILE_DELETED = 0xC0000123,
            STATUS_SMB_BAD_FID = 0x00060001,
            STATUS_INVALID_HANDLE = 0xC0000008,
            STATUS_OBJECT_TYPE_MISMATCH = 0xC0000024,
            STATUS_PORT_DISCONNECTED = 0xC0000037,
            STATUS_INVALID_PORT_HANDLE = 0xC0000042,
            STATUS_FILE_CLOSED = 0xC0000128,
            STATUS_HANDLE_NOT_CLOSABLE = 0xC0000235,
            STATUS_SECTION_TOO_BIG = 0xC0000040,
            STATUS_TOO_MANY_PAGING_FILES = 0xC0000097,
            STATUS_INSUFF_SERVER_RESOURCES = 0xC0000205,
            STATUS_OS2_INVALID_ACCESS = 0x000C0001,
            STATUS_ACCESS_DENIED2 = 0xC00000CA,
            STATUS_DATA_ERROR1 = 0xC000009C,
            STATUS_DIRECTORY_NOT_EMPTY = 0xC0000101,
            STATUS_NOT_SAME_DEVICE = 0xC00000D4,
            STATUS_NO_MORE_FILES = 0x80000006,
            STATUS_UNSUCCESSFUL = 0xC0000001,
            STATUS_FILE_LOCK_CONFLICT = 0xC0000054,
            STATUS_LOCK_NOT_GRANTED = 0xC0000055,
            STATUS_END_OF_FILE = 0xC0000011,
            STATUS_NOT_SUPPORTED = 0XC00000BB,
            STATUS_OBJECT_NAME_COLLISION = 0xC0000035,
            STATUS_INVALID_PARAMETER = 0xC000000D,
            STATUS_OS2_INVALID_LEVEL = 0x007C0001,
            STATUS_OS2_NEGATIVE_SEEK = 0x00830001,
            STATUS_RANGE_NOT_LOCKED = 0xC000007E,
            STATUS_OS2_NO_MORE_SIDS = 0x00710001,
            STATUS_OS2_CANCEL_VIOLATION = 0x00AD0001,
            STATUS_OS2_ATOMIC_LOCKS_NOT_SUPPORTED = 0x00AE0001,
            STATUS_INVALID_INFO_CLASS = 0xC0000003,
            STATUS_INVALID_PIPE_STATE = 0xC00000AD,
            STATUS_INVALID_READ_MODE = 0xC00000B4,
            STATUS_OS2_CANNOT_COPY = 0x010A0001,
            STATUS_INSTANCE_NOT_AVAILABLE = 0xC00000AB,
            STATUS_PIPE_NOT_AVAILABLE = 0xC00000AC,
            STATUS_PIPE_BUSY = 0xC00000AE,
            STATUS_PIPE_CLOSING = 0xC00000B1,
            STATUS_PIPE_EMPTY = 0xC00000D9,
            STATUS_PIPE_DISCONNECTED = 0xC00000B0,
            STATUS_BUFFER_OVERFLOW = 0x80000005,
            STATUS_MORE_PROCESSING_REQUIRED = 0xC0000016,
            STATUS_EA_TOO_LARGE = 0xC0000050,
            STATUS_OS2_EAS_DIDNT_FIT = 0x01130001,
            STATUS_EAS_NOT_SUPPORTED = 0xC000004F,
            STATUS_OS2_EA_ACCESS_DENIED = 0x03E20001,
            STATUS_NOTIFY_ENUM_DIR = 0x0000010C,
            STATUS_INVALID_SMB = 0x00010002,
            STATUS_WRONG_PASSWORD = 0xC000006A,
            STATUS_PATH_NOT_COVERED = 0xC0000257,
            STATUS_NETWORK_ACCESS_DENIED = 0xC00000CA,
            STATUS_NETWORK_NAME_DELETED = 0xC00000C9,
            STATUS_SMB_BAD_TID = 0x00050002,
            STATUS_BAD_NETWORK_NAME = 0xC00000CC,
            STATUS_BAD_DEVICE_TYPE = 0xC00000CB,
            STATUS_SMB_BAD_COMMAND = 0x00160002,
            STATUS_PRINT_QUEUE_FULL  = 0xC00000C6,
            STATUS_NO_SPOOL_SPACE = 0xC00000C7,
            STATUS_PRINT_CANCELLED = 0xC00000C8,
            STATUS_UNEXPECTED_NETWORK_ERROR = 0xC00000C4,
            STATUS_IO_TIMEOUT = 0xC00000B5,
            STATUS_REQUEST_NOT_ACCEPTED = 0xC00000D0,
            STATUS_TOO_MANY_SESSIONS = 0xC00000CE,
            STATUS_SMB_BAD_UID = 0x005B0002,
            STATUS_SMB_USE_MPX = 0x00FA0002,
            STATUS_SMB_USE_STANDARD = 0x00FB0002,
            STATUS_SMB_CONTINUE_MPX = 0x00FC0002,
            STATUS_ACCOUNT_DISABLED = 0xC0000072,
            STATUS_ACCOUNT_EXPIRED = 0xC0000193,
            STATUS_INVALID_WORKSTATION = 0xC0000070,
            STATUS_INVALID_LOGON_HOURS = 0xC000006F,
            STATUS_PASSWORD_EXPIRED = 0xC0000071,
            STATUS_PASSWORD_MUST_CHANGE = 0xC0000224,
            STATUS_SMB_NO_SUPPORT = 0XFFFF0002,
            STATUS_MEDIA_WRITE_PROTECTED = 0xC00000A2,
            STATUS_NO_MEDIA_IN_DEVICE = 0xC0000013,
            STATUS_INVALID_DEVICE_STATE = 0xC0000184,
            STATUS_DATA_ERROR2 = 0xC000003E,
            STATUS_CRC_ERROR = 0xC000003F,
            STATUS_DISK_CORRUPT_ERROR = 0xC0000032,
            STATUS_NONEXISTENT_SECTOR = 0xC0000015,
            STATUS_DEVICE_PAPER_EMPTY = 0x8000000E,
            STATUS_SHARING_VIOLATION = 0xC0000043,
            STATUS_WRONG_VOLUME = 0xC0000012,
            STATUS_DISK_FULL = 0xC000007F
        };

        struct SmbHeader {
            uint32_t protocolId; // "\xFE SMB" magic bytes
            uint16_t headerLength; // always 64
            uint16_t creditCharge;
            uint32_t status; // also ChannelSequence/Reserved depending on dialect
            uint16_t command;
            uint16_t requestedCredits;
            uint32_t flags; // indicating Request/Response or SYNC/ASYNC
            uint32_t chainOffset;
            uint64_t messageId;
            uint32_t processId; // 8 byte asyncId when ASYNC
            uint32_t treeId;
            uint64_t sessionId;
            uint8_t signature[16];
        };
    }
}

#endif //PCAPFS_SMB_HEADERS_H
